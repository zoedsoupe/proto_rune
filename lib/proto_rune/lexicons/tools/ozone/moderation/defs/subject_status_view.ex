# Generated by Mix.Tasks.GenSchemas
defmodule ProtoRune.Tools.Ozone.Moderation.Defs.SubjectStatusView do
  @moduledoc """
  **subjectStatusView** (object/record)

  No description.
  """

  @enforce_keys [:id, :subject, :createdAt, :updatedAt, :reviewState]
  defstruct accountStats: nil,
            appealed: nil,
            comment: nil,
            createdAt: nil,
            hosting: nil,
            id: nil,
            lastAppealedAt: nil,
            lastReportedAt: nil,
            lastReviewedAt: nil,
            lastReviewedBy: nil,
            muteReportingUntil: nil,
            muteUntil: nil,
            recordsStats: nil,
            reviewState: nil,
            subject: nil,
            subjectBlobCids: nil,
            subjectRepoHandle: nil,
            suspendUntil: nil,
            tags: nil,
            takendown: nil,
            updatedAt: nil

  @type t :: %__MODULE__{
          accountStats: ProtoRune.Tools.Ozone.Moderation.Defs.AccountStats.t(),
          appealed: boolean(),
          comment: String.t(),
          createdAt: String.t(),
          hosting:
            ProtoRune.Tools.Ozone.Moderation.Defs.AccountHosting.t()
            | ProtoRune.Tools.Ozone.Moderation.Defs.RecordHosting.t(),
          id: integer(),
          lastAppealedAt: String.t(),
          lastReportedAt: String.t(),
          lastReviewedAt: String.t(),
          lastReviewedBy: String.t(),
          muteReportingUntil: String.t(),
          muteUntil: String.t(),
          recordsStats: ProtoRune.Tools.Ozone.Moderation.Defs.RecordsStats.t(),
          reviewState: ProtoRune.Types.tools_ozone_moderation_defs_subject_review_state(),
          subject:
            ProtoRune.Com.Atproto.Admin.Defs.RepoRef.t()
            | ProtoRune.Com.Atproto.Repo.StrongRef.Main.t(),
          subjectBlobCids: list(String.t()),
          subjectRepoHandle: String.t(),
          suspendUntil: String.t(),
          tags: list(String.t()),
          takendown: boolean(),
          updatedAt: String.t()
        }
end
